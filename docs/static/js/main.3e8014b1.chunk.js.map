{"version":3,"sources":["api/index.js","components/HangmanAlphabet/css.js","components/HangmanAlphabet/index.js","components/HangmanGuesses/css.js","components/HangmanGuesses/index.js","components/HangmanLetter/css.js","components/HangmanLetter/index.js","components/HangmanWord/index.js","css.js","App.js","index.js"],"names":["style","alphaContainer","maxWidth","btn","padding","fontSize","HangmanAlphabet","handleClick","event","letter","target","disabled","props","onClick","toRender","i","String","fromCharCode","push","disableAll","key","e","Component","base","height","width","margin","textAlign","border","HangmanGuesses","Array","this","count","keys","map","guess","index","wrongGuessCount","backgroundColor","display","HangmanLetter","shownLetter","isShown","HangmanWord","letters","word","split","lettersToShow","showLetters","ucase","toUpperCase","show","includes","flexDirection","justifyContent","wrapper","minHeight","main","background","App","defaultState","incorrectGuesses","correctGuesses","guessedLetters","tries","isWinner","state","componentDidMount","resetState","setState","words","Math","floor","random","length","handleGameLoss","alert","handleGameWin","checkGameStatus","handleGuess","stateCopy","JSON","parse","stringify","matches","match","RegExp","marginTop","href","rel","ReactDOM","render","document","getElementById"],"mappings":"2PAAe,GAAC,QAAS,UAAW,OAAQ,QAAS,YCUtCA,EAVD,CACVC,eAAgB,CACZC,SAAU,SAEdC,IAAK,CACDC,QAAS,MACTC,SAAU,UCFGC,E,2MACjBC,YAAc,SAACC,EAAOC,GAClBD,EAAME,OAAOC,UAAW,EACxB,EAAKC,MAAMC,QAAQJ,I,wEAKnB,IAFM,IAAD,OACDK,EAAW,GADV,WAEIC,GACL,IAAIN,EAASO,OAAOC,aAAaF,GACjCD,EAASI,KACL,4BACIP,SAAU,EAAKC,MAAMO,WACrBC,IAAKL,EACLF,QAAS,SAACQ,GAAD,OAAO,EAAKd,YAAYc,EAAGZ,IACpCT,MAAOA,EAAMG,KACZM,KARJM,EAAI,GAAIA,EAAI,GAAIA,IAAM,EAAtBA,GAaT,OAAO,yBAAKf,MAAOA,EAAMC,gBAAiBa,O,GArBLQ,aCK9BC,EATF,CACTC,OAAQ,OACRC,MAAO,QACPC,OAAQ,MACRC,UAAW,SACXtB,SAAU,OACVuB,OAAQ,mB,ujBCHSC,E,iLACP,IAAD,OACDf,EAAW,YAAIgB,MAAMC,KAAKnB,MAAMoB,OAAOC,QAAQC,IAAI,SAACC,EAAOC,GAC3D,OAAOA,EAAQ,EAAKxB,MAAMyB,gBACpB,yBAAKjB,IAAKgB,EAAOpC,MAAK,KAAOuB,EAAP,CAAae,gBAAiB,WAAYH,GAChE,yBAAKf,IAAKgB,EAAOpC,MAAK,KAAOuB,MAAWY,KAGlD,OAAO,wCAAcrB,O,GAReQ,aCG7BtB,EAND,CACVuC,QAAS,eACTb,OAAQ,MACRrB,SAAU,OCAOmC,E,iLAEb,IAAIC,EAAcV,KAAKnB,MAAM8B,QAAUX,KAAKnB,MAAMH,OAAS,IAC3D,OAAO,yBAAKT,MAAOA,GAAQyC,O,GAHQnB,aCCtBqB,E,iLAEb,IAAIC,EAAUb,KAAKnB,MAAMiC,KAAKC,MAAM,IAChCC,EAAgBhB,KAAKnB,MAAMoC,YAC/B,OACI,6BACKJ,EAAQV,IAAI,SAACzB,EAAQ2B,GAClB,IAAIa,EAAQxC,EAAOyC,cACfC,EAAOJ,EAAcK,SAASH,GAClC,OAAO,kBAAC,EAAD,CAAe7B,IAAG,UAAKX,EAAL,YAAe2B,GAAS3B,OAAQwC,EAAOP,QAASS,W,GATpD7B,a,4NCJlC,IAAMC,EAAO,CAChBgB,QAAS,OACTc,cAAe,MACfnD,SAAU,QACVwB,OAAQ,SACR4B,eAAgB,UAGPtD,EAAQ,CACjBuD,Q,qVAAQ,EACJC,UAAW,SACRjC,GAEPkC,KAAM,CACF9B,UAAW,SACXF,MAAO,MACPrB,QAAS,OACTsD,WAAY,S,ujBCTCC,E,2MACjBC,aAAe,CACXf,KAAM,GACNgB,iBAAkB,EAClBC,eAAgB,EAChBC,eAAgB,GAChBC,MAAO,EACP5C,IAAK,EACL6C,UAAU,G,EAGdC,MAAQ,EAAKN,a,EACbO,kBAAoB,kBAAM,EAAKC,c,EAE/BA,WAAa,WACT,EAAKC,SAAL,KACO,EAAKT,aADZ,CAEIf,KAAMyB,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,SAC7CtD,IAAKmD,KAAKC,MAAsB,IAAhBD,KAAKE,c,EAI7BE,eAAiB,WACbC,MAAM,6BACN,EAAKR,c,EAGTS,cAAgB,WACZ,EAAKR,SAAS,CAAEJ,UAAU,GAAQ,kBAAMW,MAAM,8B,EAGlDE,gBAAkB,WACV,EAAKZ,MAAMrB,KAAK6B,SAAW,EAAKR,MAAMJ,eAAgB,EAAKe,gBACtD,EAAKX,MAAMF,QAAU,EAAKE,MAAML,kBAAkB,EAAKc,kB,EAGpEI,YAAc,SAAAtE,GACV,IAAIuE,EAAYC,KAAKC,MAAMD,KAAKE,UAAU,EAAKjB,QAC3CkB,EAAUJ,EAAUnC,KAAKK,cAAcmC,MAAM,IAAIC,OAAO7E,EAAQ,MACpEuE,EAAUjB,eAAV,CAA4BtD,GAA5B,mBAAuCuE,EAAUjB,iBACjDiB,EAAUlB,gBAAkBsB,GAAWA,EAAQV,OAAS,EAAIU,EAAQV,OAAS,EAC7EM,EAAUnB,iBAAmBmB,EAAUjB,eAAeW,OAASM,EAAUlB,eACzE,EAAKO,SAASW,EAAW,kBAAM,EAAKF,qB,wEAIpC,OACI,6BACI,yBAAK9E,MAAOA,EAAMuD,SACd,kBAAC,EAAD,CAAgBvB,MAAOD,KAAKmC,MAAMF,MAAO3B,gBAAiBN,KAAKmC,MAAML,oBAEzE,yBAAK7D,MAAOuB,GACR,yBAAKvB,MAAOA,EAAMyD,MACd,kBAAC,EAAD,CAAaZ,KAAMd,KAAKmC,MAAMrB,KAAMG,YAAajB,KAAKmC,MAAMH,iBAC5D,kBAAC,EAAD,CAAiB3C,IAAKW,KAAKmC,MAAM9C,IAAKP,QAASkB,KAAKgD,YAAa5D,WAAYY,KAAKmC,MAAMD,aAGhG,yBAAKjE,MAAK,KAAOuB,EAAP,CAAagE,UAAW,UAC9B,4BAAQvF,MAAO,CAAEwB,OAAQ,QAAUb,UAAWoB,KAAKmC,MAAMD,SAAUpD,QAASkB,KAAKqC,YAAjF,eAEJ,yBAAKpE,MAAK,KAAOuB,EAAP,CAAagE,UAAW,UAC9B,+BAAO,uBAAGC,KAAK,yCAAyC9E,OAAO,SAAS+E,IAAI,uBAArE,sB,GA7DMnE,aCJjCoE,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.3e8014b1.chunk.js","sourcesContent":["export default [\"Hello\", \"Goodbye\", \"Rock\", \"Paper\", \"Scissors\"];","const style = {\n    alphaContainer: {\n        maxWidth: \"500px\"\n    },\n    btn: {\n        padding: \"4px\",\n        fontSize: \"1.3em\"\n    }\n};\n\nexport default style;","import React, { Component } from 'react';\nimport style from './css.js';\n\n\nexport default class HangmanAlphabet extends Component {\n    handleClick = (event, letter) => {\n        event.target.disabled = true;\n        this.props.onClick(letter);\n    }\n\n    render() {\n        let toRender = [];\n        for (let i = 65; i < 91; i++) {\n            let letter = String.fromCharCode(i);\n            toRender.push(\n                <button\n                    disabled={this.props.disableAll}\n                    key={i}\n                    onClick={(e) => this.handleClick(e, letter)}\n                    style={style.btn}>\n                    {letter}\n                </button>\n            );\n        }\n\n        return <div style={style.alphaContainer}>{toRender}</div>;\n    }\n}","const base = {\n    height: '10px',\n    width: '180px',\n    margin: '1px',\n    textAlign: 'center',\n    fontSize: '12px',\n    border: '1px solid black',\n}\n\nexport default base;","import React, { Component } from 'react';\nimport base from './css.js';\n\nexport default class HangmanGuesses extends Component {\n    render() {\n        let toRender = [...Array(this.props.count).keys()].map((guess, index) => {\n            return index < this.props.wrongGuessCount\n                ? <div key={index} style={{ ...base, backgroundColor: 'red' }}>{++guess}</div>\n                : <div key={index} style={{ ...base }}>{++guess}</div>\n        })\n\n        return <div>GUESSES:{toRender}</div>\n    }\n}","const style = {\n    display: \"inline-block\",\n    margin: \"5px\",\n    fontSize: \"2em\"\n};\n\nexport default style;","import React, { Component } from 'react';\nimport style from './css.js';\n\nexport default class HangmanLetter extends Component {\n    render() {\n        let shownLetter = this.props.isShown ? this.props.letter : \"_\";\n        return <div style={style}>{shownLetter}</div>;\n    }\n}","import React, { Component } from 'react'\nimport HangmanLetter from '../HangmanLetter'\n\n\nexport default class HangmanWord extends Component {\n    render() {\n        let letters = this.props.word.split(\"\");\n        let lettersToShow = this.props.showLetters;\n        return (\n            <div>\n                {letters.map((letter, index) => {\n                    let ucase = letter.toUpperCase();\n                    let show = lettersToShow.includes(ucase);\n                    return <HangmanLetter key={`${letter}_${index}`} letter={ucase} isShown={show} />;\n                })}\n            </div>\n        );\n    }\n}","export const base = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    maxWidth: \"800px\",\n    margin: \"0 auto\",\n    justifyContent: 'center',\n}\n\nexport const style = {\n    wrapper: {\n        minHeight: '100px',\n        ...base\n    },\n    main: {\n        textAlign: 'center',\n        width: \"60%\",\n        padding: \"10px\",\n        background: \"#aaa\"\n    }\n}","import React, { Component } from 'react';\nimport words from './api';\nimport HangmanAlphabet from './components/HangmanAlphabet';\nimport HangmanGuesses from './components/HangmanGuesses';\nimport HangmanWord from './components/HangmanWord';\nimport { base, style } from './css.js';\n\n\nexport default class App extends Component {\n    defaultState = {\n        word: \"\",\n        incorrectGuesses: 0,\n        correctGuesses: 0,\n        guessedLetters: [],\n        tries: 8,\n        key: 1,\n        isWinner: false,\n    }\n\n    state = this.defaultState\n    componentDidMount = () => this.resetState();\n\n    resetState = () => {\n        this.setState({\n            ...this.defaultState,\n            word: words[Math.floor(Math.random() * words.length)],\n            key: Math.floor(Math.random() * 999),\n        })\n    }\n\n    handleGameLoss = () => {\n        alert(\"GAME OVER! :( YOU LOSE :(\");\n        this.resetState();\n    }\n\n    handleGameWin = () => {\n        this.setState({ isWinner: true }, () => alert(\"WINNER WINNER WINNER!!!\"))\n    }\n\n    checkGameStatus = () => {\n        if (this.state.word.length === this.state.correctGuesses) this.handleGameWin();\n        else if (this.state.tries === this.state.incorrectGuesses) this.handleGameLoss();\n    }\n\n    handleGuess = letter => {\n        let stateCopy = JSON.parse(JSON.stringify(this.state));\n        let matches = stateCopy.word.toUpperCase().match(new RegExp(letter, \"g\"))\n        stateCopy.guessedLetters = [letter, ...stateCopy.guessedLetters]\n        stateCopy.correctGuesses += matches && matches.length > 0 ? matches.length : 0;\n        stateCopy.incorrectGuesses = stateCopy.guessedLetters.length - stateCopy.correctGuesses;\n        this.setState(stateCopy, () => this.checkGameStatus())\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={style.wrapper}>\n                    <HangmanGuesses count={this.state.tries} wrongGuessCount={this.state.incorrectGuesses} />\n                </div>\n                <div style={base}>\n                    <div style={style.main}>\n                        <HangmanWord word={this.state.word} showLetters={this.state.guessedLetters} />\n                        <HangmanAlphabet key={this.state.key} onClick={this.handleGuess} disableAll={this.state.isWinner} />\n                    </div>\n                </div>\n                <div style={{ ...base, marginTop: '10px' }}>\n                    <button style={{ height: '30px' }} disabled={!this.state.isWinner} onClick={this.resetState}>RESET GAME</button>\n                </div>\n                <div style={{ ...base, marginTop: '10px' }}>\n                    <small><a href=\"https://github.com/oze4/simple-hangman\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repo</a></small>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n);"],"sourceRoot":""}